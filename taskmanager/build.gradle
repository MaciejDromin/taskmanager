plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'groovy'
	id 'jacoco'
	id 'checkstyle'
	id 'org.liquibase.gradle' version '2.2.1'
}

group = 'com.soitio'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

checkstyle {
	toolVersion = '10.12.5'
	ignoreFailures = false
}

repositories {
	mavenCentral()
}

dependencies {
	// SPRING
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation "org.liquibase:liquibase-core:${liquibase_version}"

	// DB
	runtimeOnly 'org.postgresql:postgresql'

	// LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// LIQUIBASE
	liquibaseRuntime "org.liquibase:liquibase-core:${liquibase_version}"
	liquibaseRuntime "org.liquibase.ext:liquibase-hibernate6:${liquibase_version}"
	liquibaseRuntime "info.picocli:picocli:${picocli_version}"
	liquibaseRuntime "org.postgresql:postgresql:${postgres_driver_version}"
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime sourceSets.main.output

	// TESTS
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.spockframework:spock-spring:${spock_version}"
	testImplementation "org.spockframework:spock-core:${spock_version}"

	implementation "org.apache.groovy:groovy:${groovy_version}"

	testImplementation "org.testcontainers:spock:${testcontainers_version}"
	testImplementation "org.testcontainers:testcontainers:${testcontainers_version}"
	testImplementation "org.testcontainers:postgresql:${testcontainers_version}"
	testImplementation "org.testcontainers:toxiproxy:${testcontainers_version}"

	testImplementation "org.liquibase:liquibase-core:${liquibase_version}"
}

tasks.named('test') {
	useJUnitPlatform()
}

def excludeDirs = [
        "com/soitio/taskmanager/**/*Dto*"
]

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: excludeDirs)
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.2
			}
		}
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: excludeDirs)
		}))
	}
}

check.dependsOn jacocoTestCoverageVerification

test.finalizedBy jacocoTestReport
test.finalizedBy jacocoTestCoverageVerification

liquibase {
	activities {
		main {
			changelogFile "./changelog.yml"
			url "jdbc:postgresql://localhost:5432/taskmanager?useUnicode=yes&characterEncoding=UTF-8"
			username "taskmanager"
			password "taskmanager"
			referenceUrl "hibernate:spring:com.soitio?dialect=org.hibernate.dialect.PostgreSQLDialect" +
					"&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy" +
					"&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
		}
	}

	diff.dependsOn compileJava
	diffChangelog.dependsOn compileJava
	generateChangelog.dependsOn compileJava
}

diffChangelog.dependsOn test